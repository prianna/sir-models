lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
plot(log10(b), TheoR, ylim=c(1.6,2.3), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
plot(log10(b), TheoR, ylim=c(1.6,2.4), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
plot(log10(b), TheoR, ylim=c(1.9,2.1), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
br20 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
children <- numeric(0)
time <- numeric(0)
for (i in 1:length(br20$V1))
{
if ( br20$V5[i]>0 )
{
children <- c(children, br20$V1[i])
time <- c(time, br20$V2[i])
}
}
t4r20 <- time
b4r20 <- children
R0
R0[4] <- length(br420)/100
R0[4] <- length(b4r20)/100
plot(log10(b), TheoR, ylim=c(1.9,2.1), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
plot(log10(b), TheoR, ylim=c(1.6,2.4), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
plot(t1r20, b1r20, xlim=x, main="Particles Transmitted over Time, b=1e-4",
xlab="Time", ylab="Particles Transmitted (Beta = 0.14)", pch=1, cex=0.5)
plot(t2r20, b2r20, xlim=x, main="Particles Transmitted over Time, b=1e-5",
xlab="Time", ylab="Particles Transmitted (Beta = 0.15)", pch=1, cex=0.5)
plot(t3r20, b3r20, xlim=x, main="Particles Transmitted over Time, b=1e-6",
xlab="Time", ylab="Particles Transmitted (Beta = 0.18)", pch=1, cex=0.5)
plot(t4r20, b4r20, xlim=x, main="Particles Transmitted over Time, b=1e-7",
xlab="Time", ylab="Particles Transmitted (Beta = 0.23)", pch=1, cex=0.5)
plot(t5r20, b5r20, xlim=x, main="Particles Transmitted over Time, b=1e-8",
xlab="Time", ylab="Particles Transmitted (Beta = 0.32)", pch=1, cex=0.5)
plot(t6r20, b6r20, xlim=x, main="Particles Transmitted over Time, b=1e-9",
xlab="Time", ylab="Particles Transmitted (Beta = 0.50)", pch=1, cex=0.5)
plot(t7r20, b7r20, xlim=x, main="Particles Transmitted over Time, b=1e-10",
xlab="Time", ylab="Particles Transmitted (Beta = 1.30)", pch=1, cex=0.5)
legend(-10,4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
plot(log10(b), TheoR, ylim=c(1.6,2.4), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
legend(-10,4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
plot(log10(b), TheoR, ylim=c(1.6,2.4), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,2.4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
plot(log10(b), TheoR, ylim=c(1.9,2.1), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,2.4, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
plot(log10(b), TheoR, ylim=c(1.9,2.1), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,2.10, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
b16 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
children <- numeric(0)
time <- numeric(0)
for (i in 1:length(b16$V7))
{
if ( b16$V7[i]>0 )
{
children <- c(children, b16$V6[i])
time <- c(time, b16$V2[i])
}
}
plot(time,children, xlim=x, main="Particles Transmitted over Time, b=1e-4",
xlab="Time", ylab="Particles Transmitted (Beta = 0.14)", pch=1, cex=0.5)
children <- numeric(0)
time <- numeric(0)
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0 && b16$V6[i] == 0)
{
children <- c(children, b16$V6[i])
time <- c(time, b16$V2[i])
}
}
contact <- 0
nocontact <- 0
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0)
{
if (&& b16$V6[i] == 0)
{
nocontact <- nocontact+1
}
else
{
contact <- contact+1
}
}
}
contact <- 0
nocontact <- 0
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0)
{
if (b16$V6[i] == 0)
{
nocontact+1
}
else
{
contact+1
}
}
}
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0)
{
if (b16$V6[i] == 0)
{
nocontact++
}
else
{
contact++
}
}
}
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0 && b16$V6[i] == 0)
{
nocontact++
}
else if (b16$V7[i] > 0 && b16$V6[i] > 0)
{
contact++
}
}
contact <- 0
nocontact <- 0
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0 && b16$V6[i] == 0)
{
nocontact++
}
if (b16$V7[i] > 0 && b16$V6[i] > 0)
{
contact++
}
}
contact <- 0
nocontact <- 0
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0 && b16$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b16$V7[i] > 0 && b16$V6[i] > 0)
{
contact = contact+1
}
}
contact <- 0
nocontact <- 0
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0 && b16$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b16$V7[i] > 0 && b16$V6[i] > 0)
{
contact = contact+1
}
}
prob16 <- nocontact/contact
theo16 <- dpois(2.73671)
theo16 <- dpois(x, 2.73671)
x <- 0
theo16 <- dpois(x, 2.73671)
theo16 <- 1-theo16
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0 && b16$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b16$V7[i] > 0 && b16$V6[i] > 0)
{
contact = contact+1
kids <- kids+b16$V6[i]
}
}
R0 <- kids/10000
b17 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b16$V7))
{
if ( b16$V7[i] > 0 && b16$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b16$V7[i] > 0 && b16$V6[i] > 0)
{
contact = contact+1
kids <- kids+b16$V6[i]
}
}
prob17 <- nocontact/contact
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b17$V7))
{
if ( b17$V7[i] > 0 && b17$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b17$V7[i] > 0 && b17$V6[i] > 0)
{
contact = contact+1
kids <- kids+b17$V6[i]
}
}
R0 <- c(kids/10000, R0)
prob17 <- nocontact/contact
b18 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b18$V7))
{
if ( b18$V7[i] > 0 && b18$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b18$V7[i] > 0 && b18$V6[i] > 0)
{
contact = contact+1
kids <- kids+b18$V6[i]
}
}
prob18 <- nocontact/contact
R0 <- c(kids/10000, R0)
b19 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b19$V7))
{
if ( b19$V7[i] > 0 && b19$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b19$V7[i] > 0 && b19$V6[i] > 0)
{
contact = contact+1
kids <- kids+b19$V6[i]
}
}
prob19 <- nocontact/contact
R0 <- c(kids/10000, R0)
b10 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b10$V7))
{
if ( b10$V7[i] > 0 && b10$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b10$V7[i] > 0 && b10$V6[i] > 0)
{
contact = contact+1
kids <- kids+b10$V6[i]
}
}
prob10 <- nocontact/contact
R0 <- c(kids/10000, R0)
b10 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b10$V7))
{
if ( b10$V7[i] > 0 && b10$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b10$V7[i] > 0 && b10$V6[i] > 0)
{
contact = contact+1
kids <- kids+b10$V6[i]
}
}
prob10 <- nocontact/contact
R0 <- c(kids/10000, R0)
b <- c(1e-10, 1e-9, 1e-8, 1e-7, 1e-6)
TheoR <- c(2, 2, 2, 2, 2)
plot(log10(b), TheoR, ylim=c(1.9,2.1), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0[1:5], type="p", col="red")
lines(log10(b), R0[1:5], lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,2.10, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
b <- c(1e-10, 1e-9, 1e-8, 1e-7, 1e-6)
TheoR <- c(2, 2, 2, 2, 2)
plot(log10(b), TheoR, ylim=c(2.0,2.2), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0[1:5], type="p", col="red")
lines(log10(b), R0[1:5], lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,2.10, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
R0 <- R0[1:5]
R0 <- c(R0, 2.05)
R0 <- R0[2:6]
b <- c(1e-10, 1e-9, 1e-8, 1e-7, 1e-6)
TheoR <- c(2, 2, 2, 2, 2)
plot(log10(b), TheoR, ylim=c(2.0,2.2), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,2.10, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
b <- c(1e-10, 1e-9, 1e-8, 1e-7, 1e-6)
TheoR <- c(2, 2, 2, 2, 2)
plot(log10(b), TheoR, ylim=c(2.0,2.2), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,2.20, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
b10 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b10$V7))
{
if ( b10$V7[i] > 0 && b10$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b10$V7[i] > 0 && b10$V6[i] > 0)
{
contact = contact+1
kids <- kids+b10$V6[i]
}
}
prob10 <- nocontact/contact
R0 <- c(kids/50000, R0)
kids/50000
R0 <- R0[2:6]
R0 <- c(2.1196, R0)
R0 <- R0[2:6]
R0[1] <- 2.1196
b <- c(1e-10, 1e-9, 1e-8, 1e-7, 1e-6)
TheoR <- c(2, 2, 2, 2, 2)
plot(log10(b), TheoR, ylim=c(2.0,2.2), main="Theoretical R0 vs Simulation",
xlab="Log10(b)", ylab="R0", pch=3, cex=0.75)
points(log10(b), R0, type="p", col="red")
lines(log10(b), R0, lty=22, col="red")
lines(log10(b), TheoR, lty=1, col="black")
legend(-10,2.20, c("Simulated", "Theoretical"), # puts text in the legend
lty=c(22, 1), cex=0.6, # gives the legend appropriate symbols (lines)
col=c("red", "black")) # gives the legend lines the correct color and width
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b10$V7))
{
if ( b10$V7[i] > 0 && b10$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b10$V7[i] > 0 && b10$V6[i] > 0)
{
contact = contact+1
}
if(b10$V6[i] > 0)
{
kids <- kids+b10$V6[i]
}
}
kids/50000
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b10$V7))
{
if ( b10$V7[i] > 0 && b10$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b10$V7[i] > 0 && b10$V6[i] > 0)
{
contact = contact+1
}
if(b10$V5[i] == 0 && b10$V6[i] > 0)
{
kids <- kids+b10$V6[i]
}
}
kids/50000
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b10$V7))
{
if ( b10$V7[i] > 0 && b10$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b10$V7[i] > 0 && b10$V6[i] > 0)
{
contact = contact+1
}
if(b10$V5[i] == 0)
{
kids <- kids+b10$V6[i]
}
}
prob10 <- nocontact/contact
R0 <- c(kids/50000, R0)
b10 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
contact <- 0
nocontact <- 0
kids <- 0
for (i in 1:length(b10$V7))
{
if ( b10$V7[i] > 0 && b10$V6[i] == 0)
{
nocontact = nocontact+1
}
if (b10$V7[i] > 0 && b10$V6[i] > 0)
{
contact = contact+1
}
if(b10$V5[i] == 0)
{
kids <- kids+b10$V6[i]
}
}
prob10 <- nocontact/contact
R0 <- c(kids/10000, R0)
