return(list(V=V,t.crit=t.crit))
}
#############################
# the critical function
#############################
# input : viral column vector
# output: time to reach v.crit
critical=function(v)
{
f=function(t)(sum(expm(A*t)%*%v)-v.crit)^2
out=optimize(f,c(0,t.max))
t=out$minimum
return(t)
}
############################
# single strain R0 function
############################
# input: nada
# output: R0 (vector)
# computes the R0s for the single strains
R.naught=function(){
R=numeric(k)
for(i in 1:k){
S=function(t)exp(-b[i]*pmin(v.crit*exp(r[i]*t),N))
R[i]=beta*T*(1-integrate(S,0,T)$value/T)
}
return(R)
}
###################################
# the transmission function
###################################
# input: matrix of viral column vectors
# output: viral type of newly infected
transmission=function(V){
n=length(V[1,]) # number of viral vectors
W=matrix(rpois(n=k*n,lambda=V*b),k,n)
return(W)
}
#######################################
# between host dynamics (the cross scale model)
########################################
# input: initial infected type v, maximum cases
# output: list with who (who infected this individual, 0 for case 1), when (when was this individual infected), type (matrix of types)
between.host=function(v,cases){
type=matrix(v,k,1) # holds the intial viral types for all individuals; dynamically increased by adding columns.
who=c(0) # vector of who was the parent of the infected individual
when=c(0) # when the individual was initially infected
gen=c(0) # generation when individual was infected
total=1 # total cases
current=1 # current cases
gen.count=1
while(total<(cases+1)&&current>0){
# next line determines the number of contacts each individual in the current generation has with other individuals
kids=rpois(n=current,lambda=beta*T)
# the next loop determines at what times the contact events occur, the transmission of viral particles, and removes any instances where transmitted load is zero
for(i in 1:current){ # loop for all individuals in current generation
if(kids[i]>0){ # if current individual has a positive number of contacts do the following
v.start=type[,total-current+i] # get the initial viral load of the current individual
t=runif(kids[i])*T # find the times after t.crit at which the contact events occur
out=within.host(v,t) # find the viral load at the contact events and t.crit
v.out=out$V
t.crit=out$t.crit
w=transmission(v.out) # find the transmitted viral load at these contact events
viral.counts=colSums(w) # find the total viral load due to the transmission events
positive=which(viral.counts>0) # find which transmission events included a positive number of viral particles
if(length(positive)>0){ # if there were some real transmission events do the following
who=c(who,rep(total-current+i,length(positive))) # make the current individual the parent of all the newly infected individuals
mom.when=when[total-current+i] # find the time when mom was infected.
when=c(when,t[positive]+mom.when+t.crit) # add the times at which the newly infected individuals got infected
type=cbind(type,w[,positive]) # add the types for the newly infected individuals
kids[i]=length(positive) # reset kids[i] to the number of newly infected individuals
}
if(length(positive)==0)kids[i]=0 # reset kids[i] when there where no infections
}
}
gen=c(gen,rep(gen.count,sum(kids))) # add the generation times for all the newly infected individuals for the current generation
current=sum(kids) # update the count for the current number of infected individuals
total=total+current # update the count for the cummulative number of infected individuals
gen.count=gen.count+1 # increate the generation count
}
return(list(when=when,who=who,type=type,gen=gen))
}
# running the simulation
v=c(100,rep(0,k-1))
cases=100
out=between.host(v=v,cases=cases)
out
#plotting total viral sizes by generation?
data=matrix(0,max(out$gen)+1,k)
totals=numeric(max(out$gen)+1)
for(i in 0:(max(out$gen))){
I=which(out$gen==i)
if(length(I)>1)data[i+1,]=rowSums(out$type[,I])/length(I)
if(length(I)==1)data[i+1,]=out$type[,I]
totals[i+1]=length(I)
}
par(cex.lab=1.5,cex.axis=1.5,mfrow=c(1,2))
matplot(data,type="b",pch=21,bg=1:k,ylab="viral number per infected",xlab="generation")
plot(totals,type="b",pch=21,bg="black",ylab="number of infected",xlab="generation")
# computing all of the R0s for the single viral types.
R.naught()
`R029` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
View(`R029`)
offspring1 <- c(0)
for i in 1:length(R029$V1)
{
if (R029$V4[i] != 1)
{
offpsring1 <- c(offspring1, R029$V1[i])
}
}
offspring1 <- c(0)
for i in 1:length(R029$V1)
{
if (R029$V4[i] != 1)
offpsring1 <- c(offspring1, R029$V1[i])
}
offspring1 <- c(1)
for i in 1:length(R029$V1)
{
if (R029$V4[i] != 1)
offpsring1 <- c(offspring1, R029$V1[i])
}
offspring1 = 1
for i in 1:length(R029$V1)
individ1<- R029$V1
offspring1 = 1
for (i in 1:length(individ1))
{
if (R029$V4[i] != 1)
offpsring1 <- c(offspring1, R029$V1[i])
}
fix(offpsring1)
fix(offpsring1)
offspring1 = 1
for (i in 1:length(individ1))
{
if (R029$V4[i] != 1)
offpsring1 <- c(offspring1, individ1)
}
offspring1 = 1
for (i in 1:length(individ1))
{
if (R029$V4[i] > 1)
offpsring1 <- c(offspring1, individ1)
}
offspring1 = c(1)
for (i in 1:length(individ1))
{
if (R029$V4[i] > 1)
offpsring1 <- c(offspring1, individ1)
}
offspring1 <- c(1)
for (i in 1:length(individ1))
{
if (R029$V4[i] > 1)
offpsring1 <- c(offspring1, individ1)
}
offspring1 <- c(1)
for (i in 1:length(individ1))
{
if (R029$V4[i] > 1)
offspring1 <- c(offspring1, individ1)
}
for (i in 1:length(individ1))
{
if (R029$V4[i] > 1)
offspring1 <- c(offspring1, individ1)
}
for (i in 1:length(individ1))
{
if (R029$V4[i] > 1)
{
offspring1 <- c(offspring1, individ1[i])
}
}
offspring1 <- 0
for (i in 1:2242)
{
if (R029$V4[i] > 1)
{
offspring1 <- c(offspring1, individ1[i])
}
}
plot(x=offspring1, y=2.9)
offspring1 <- 0
for (i in 1:2242)
{
if (R029$V4[i] > 1)
{
offspring1 <- c(offspring1, individ1[i])
repro <- c(rate, 2.9)
}
}
offspring1 <- 0
for (i in 1:2242)
{
if (R029$V4[i] > 1)
{
offspring1 <- c(offspring1, individ1[i])
repro <- c(repro, 2.9)
}
}
repro
repro <- 0
for (i in 1:2242)
{
if (R029$V4[i] > 1)
{
offspring1 <- c(offspring1, individ1[i])
repro <- c(repro, 2.9)
}
}
repro <- 0
offspring1 <- 0
for (i in 1:2242)
{
if (R029$V4[i] > 1)
{
offspring1 <- c(offspring1, individ1[i])
repro <- c(repro, 2.9)
}
}
plot (x=offspring1, y=repro)
plot (x=repro, y=offspring1)
`r20` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
View(`r20`)
r20births <- 0
for (i in 1:144)
{
if (r20$V3[i] == 1)
{
r20births <- c(r20births, r20$V6[i])
}
}
fix(`r20births`)
fix(`r20births`)
r20births <- vector
for (i in 1:144)
{
if (r20$V3[i] == 1)
{
r20births <- c(r20births, r20$V6[i])
}
}
fix(`r20births`)
r20births <- numeric
fix(`r20births`)
for (i in 1:144)
{
if (r20$V3[i] == 1)
{
r20births <- c(r20births, r20$V6[i])
}
}
fix(`r20births`)
r20births <- numeric(0)
fix(`r20births`)
for (i in 1:144)
{
if (r20$V3[i] == 1)
{
r20births <- c(r20births, r20$V6[i])
}
}
fix(`r20births`)
mean(r20births)
`r20` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
View(`r20`)
r20births <- numeric(0)
for (i in 1:144)
{
if (r20$V3[i] == 1)
{
r20births <- c(r20births, r20$V6[i])
}
}
fix(`r20births`)
r20births <- numeric(0)
for (i in 1:length(r20$V6))
{
if (r20$V3[i] == 1)
{
r20births <- c(r20births, r20$V6[i])
}
}
fix(`r20births`)
mean(r20births)
`r20` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
View(`r20`)
r20births <- numeric(0)
for (i in 1:length(r20$V6))
{
if (r20$V3[i] == 1)
{
r20births <- c(r20births, r20$V6[i])
}
}
mean(r20births)
r20children <- numeric(0)
for (i in 1:length(r20$V1))
{
if (r20$V3[i] > 1)
{
r20children <- c(r20children, r20$V1[i])
}
}
mean(r20children)
`r20` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
View(`r20`)
r20births <- numeric(0)
for (i in 1:length(r20$V6))
{
if (r20$V3[i] == 1)
{
r20births <- c(r20births, r20$V6[i])
}
}
r20children <- numeric(0)
for (i in 1:length(r20$V1))
{
if (r20$V3[i] > 1)
{
r20children <- c(r20children, r20$V1[i])
}
}
mean(r0births)
mean(r20births)
r20rates <- numeric(0)
for (i in 1:length(r20births))
{
r20rates <- c(r20rates, 2.0)
}
plot(x=r20rates, y=r20births)
plot(r20$v2, r20$v1)
plot(x=r20$V2, y=r20$V1)
plot(r20$V2, r20$V1, main="Particles transmitted over Time",
xlab="Time", ylab="Particles Transmitted", pch=19)
plot(r20$V2, r20$V1, main="Particles transmitted over Time",
xlab="Time", ylab="Particles Transmitted", pch=11)
plot(r20$V2, r20$V1, main="Particles transmitted over Time",
xlab="Time", ylab="Particles Transmitted", pch=1)
plot(r20$V2, r20$V1, main="Particles transmitted over Time",
xlab="Time", ylab="Particles Transmitted", pch=1)
xticks <- seq(0, 15, 0.25)
plot(x=r20$V2, y=r20$V1, axes=FALSE)
axis(1, at = xticks, labels = xticks, col.axis="blue", las=2, tck=-.01)
par
plot(r20$V2, r20$V1, main="Particles transmitted over Time",
xlab="Time", ylab="Particles Transmitted", pch=1)
`r20` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
View(`r20`)
r20births <- numeric(0)
for (i in 1:length(r20$V6))
{
if (r20$V3[i] == 1)
{
r20births <- c(r20births, r20$V6[i])
}
}
r20children <- numeric(0)
for (i in 1:length(r20$V1))
{
if (r20$V3[i] > 1)
{
r20children <- c(r20children, r20$V1[i])
}
}
r20rates <- numeric(0)
for (i in 1:length(r20births))
{
r20rates <- c(r20rates, 2.0)
}
plot(r20$V2, r20$V1, main="Particles transmitted over Time",
xlab="Time", ylab="Particles Transmitted", pch=1)
plot(r20$V2, r20$V1, main="Particles transmitted over Time",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
plot(r20$V2, r20$V1, main="Particles Transmitted over Time, r=2.0",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
`r19` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
View(`r19`)
plot(r20$V2, r20$V1, main="Particles Transmitted over Time, r=2.0",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
plot(r19$V2, r19$V1, main="Particles Transmitted over Time, r=1.9",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
`r18` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
View(`r18`)
plot(r18$V2, r18$V1, main="Particles Transmitted over Time, r=1.8",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
`r17` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
plot(r17$V2, r17$V1, main="Particles Transmitted over Time, r=1.7",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
`r16` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
plot(r16$V2, r16$V1, main="Particles Transmitted over Time, r=1.6",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
`r15` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
plot(r15$V2, r15$V1, main="Particles Transmitted over Time, r=1.5",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
`r14` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
plot(r14$V2, r15$V1, main="Particles Transmitted over Time, r=1.4",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
plot(r14$V2, r14$V1, main="Particles Transmitted over Time, r=1.4",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
rvr0 <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/rvr0.txt", header=F)
View(rvr0)
plot(rvr0$V1, rvr0$V2, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5)
lines(rvr0$V1, rvr0$V3, pch=1, cex=0.5, color="red")
plot(rvr0$V1, rvr0$V3, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5)
lines(rvr0$V1, rvr0$V2, pch=1, cex=0.5, col="red")
plot(rvr0$V1, rvr0$V2, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5)
lines(rvr0$V1, rvr0$V3, pch=1, cex=0.5, col="red")
plot(rvr0$V1, rvr0$V2, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=1, cex=0.5, col="black")
plot(rvr0$V1, rvr0$V2, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, cex=0.5, col="black")
plot(rvr0$V1, rvr0$V2, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
plot(rvr0$V1, rvr0$V2, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(0.01, 3.5, c("C++","R"), cex=0.8,
col=c("red","black"), pch=1:22, lty=1:2);
plot(rvr0$V1, rvr0$V2, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(0.01, 3.5, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2);
plot(rvr0$V1, rvr0$V2, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V2, pch=1, lty=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(0.01, 3.5, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2);
plot(rvr0$V1, rvr0$V3, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=22, lty=2, cex=0.5, col="black")
lines(rvr0$V1, rvr0$V2, pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(0.01,0.0047, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2);
plot(rvr0$V1, rvr0$V3, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=22, lty=2, cex=0.5, col="black")
lines(rvr0$V1, rvr0$V2, pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(2.0,0.001, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2);
plot(rvr0$V1, rvr0$V3, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=22, lty=2, cex=0.5, col="black")
lines(rvr0$V1, rvr0$V2, pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(2.0,0.002, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2);
legend(1.5,0.002, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2);
plot(rvr0$V1, rvr0$V3, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=22, lty=2, cex=0.5, col="black")
lines(rvr0$V1, rvr0$V2, pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(1.0,0.002, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2)
plot(rvr0$V1, rvr0$V3, main="R vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=22, lty=2, cex=0.5, col="black")
lines(rvr0$V1, rvr0$V2, pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(1.25,0.002, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2)
`r13` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
plot(r13$V2, r13$V1, main="Particles Transmitted over Time, r=1.3",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
plot(rvr0$V1, rvr0$V2, main="Growth Rate vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V2, pch=1, lty=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(0.01, 3.5, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2);
plot(rvr0$V1, rvr0$V3, main="Growth Rate vs R0",
xlab="Growth Rate", ylab="Calculated R0", pch=22, lty=2, cex=0.5, col="black")
lines(rvr0$V1, rvr0$V2, pch=1, cex=0.5, col="red")
lines(rvr0$V1, rvr0$V3, pch=22, lty=2, cex=0.5, col="black")
legend(1.25,0.002, c("C++","R"), cex=0.8,
col=c("red","black"), lty=1:2)
`r12` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
plot(r12$V2, r12$V1, main="Particles Transmitted over Time, r=1.2",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
`r11` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
plot(r11$V2, r11$V1, main="Particles Transmitted over Time, r=1.1",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
`r10` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
`r09` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
`r08` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
`r07` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
`r06` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
`r05` <- read.csv("~/Documents/Courses/SIRModels/2StrainCSS/2StrainCSS/Build/Products/Debug/formatted.txt", header=F)
plot(r05$V2, r05$V1, main="Particles Transmitted over Time, r=0.5",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
plot(r06$V2, r06$V1, main="Particles Transmitted over Time, r=0.6",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
plot(r07$V2, r07$V1, main="Particles Transmitted over Time, r=0.7",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
plot(r08$V2, r08$V1, main="Particles Transmitted over Time, r=0.8",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
plot(r09$V2, r09$V1, main="Particles Transmitted over Time, r=0.9",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
plot(r10$V2, r10$V1, main="Particles Transmitted over Time, r=1.0",
xlab="Time", ylab="Particles Transmitted", pch=1, cex=0.5)
load("~/Documents/Courses/SIRModels/2StrainCSS/CSSComparison/CSSComparison.Rproj")
load("~/Documents/Courses/SIRModels/2StrainCSS/CSSComparison/CSSComparison.Rproj")
