{
    "contents" : "# a simple cross scale simulator\n\nlibrary(Matrix)\n\n# some global stuff for the simulations\nk=5; # number of viral types\nr=seq(1,2,length=k) # growth rates of viral types\nM=matrix(0,k,k) # mutation matrix (one steps to the right)\nM[-1,-k]=diag(k-1)*0.01\nA=M+diag(r) # the viral dynamic matrix\nN=100000 # maximal load\nbeta=2 # contact rate\nb=seq(0.1,1,length=k) # weights for transmission\n\n\n\n# the within host function\n# input: initial condition v and vector of times for evaluation\n# output: matrix whose columns correspond to the viral numbers at the desired times\n\n\nwithin.host=function(v,times){\n\tL=length(times) # number of evaluations\n\tk=length(v) # number of viral types\n\tV=matrix(0,k,L)\n\tfor(i in 1:L){\n\t\ttemp=as.matrix(expm(A*times[i])%*%v);\n\t\tif(sum(temp)>N)temp=N*temp/sum(temp)\n\t\tV[,i]=temp\n\t\t}\n\treturn(V)\n}\n\n\n# the transmission function\n# input: matrix of viral column vectors\n# output: viral type of newly infected\n\ntransmission=function(V){\n\tn=length(V[1,]) # number of viral vectors\n \tW=matrix(rpois(n=k*n,lambda=V*b),k,n)\n\treturn(W)\n}\n\n\n\n\n# the main function for simulating at between host level\n# input is the initial infected type v and maximum number of cases\n# output is a list with who (who infected this individual, 0 for case 1), when (when was this individual infected), type (matrix of types)\n\nbetween.host=function(v,cases){\n\ttype=matrix(v,k,1)\n\twho=c(0)\n\twhen=c(0)\n\tgen=c(0)\n\ttotal=1 # total cases\n\tcurrent=1 # current cases\n\tgen.count=1\n\n\twhile(total<(cases+1)&&current>0){\n\t\tkids=rpois(n=current,lambda=beta)\n\t\tfor(i in 1:current){\n\t\t\tif(kids[i]>0){\n\t\t\t\tv=type[,total-current+i]\n\t\t\t\tt=runif(kids[i])\n\t\t\t\tv.out=within.host(v,t)\n\t\t\t\tw=transmission(v.out)\n\t\t\t\tviral.counts=colSums(w)\n\t\t\t\tpositive=which(viral.counts>0)\n\t\t\t\tif(length(positive)>0){\n\t\t\t\t\twho=c(who,rep(total-current+i,length(positive)))\n\t\t\t\t\tmom.when=when[total-current+i]\n\t\t\t\t\twhen=c(when,t[positive]+mom.when)\n\t\t\t\t\t\t\t\t\n\t\t\t\t\ttype=cbind(type,w[,positive])\n\t\t\t\t\t\t\tkids[i]=length(positive)\t\n}\nif(length(positive)==0)kids[i]=0\n\n\t\t\t}\n\t\t}\n\t\tgen=c(gen,rep(gen.count,sum(kids)))\n\t\tcurrent=sum(kids)\n\t\ttotal=total+current\n\t\tgen.count=gen.count+1\n\t\t\n\t}\n\t\n\treturn(list(when=when,who=who,type=type,gen=gen))\n\t\n\t\n}\n\n# running the simulation\nv=c(100,rep(0,k-1))\ncases=100\nout=between.host(v=v,cases=cases)\nout\n\n#plotting total viral sizes by generation?\n\ndata=matrix(0,max(out$gen)+1,k)\ntotals=numeric(max(out$gen)+1)\nfor(i in 0:(max(out$gen))){\n\tI=which(out$gen==i)\n\tif(length(I)>1)data[i+1,]=rowSums(out$type[,I])/length(I)\n\tif(length(I)==1)data[i+1,]=out$type[,I]\n\ttotals[i+1]=length(I)\n}\n\npar(cex.lab=1.5,cex.axis=1.5,mfrow=c(1,2))\nmatplot(data,type=\"b\",pch=21,bg=1:k,ylab=\"viral number per infected\",xlab=\"generation\")\nplot(totals,type=\"b\",pch=21,bg=\"black\",ylab=\"number of infected\",xlab=\"generation\")\n\n\n\n\n\n",
    "created" : 1375723059946.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3603126722",
    "id" : "38AFD187",
    "lastKnownWriteTime" : 1371664440,
    "path" : "~/Downloads/cross-scale-simulator-2 (Autosaved).R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}